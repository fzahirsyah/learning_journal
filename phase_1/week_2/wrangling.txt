SELECT start_time,
    EXTRACT (QUARTER FROM start_time) as quarter_of_year,
    CURRENT_DATETIME() AS default_current,
    CURRENT_DATETIME('Asia/Jakarta') AS current_jakarta,
    TIMESTAMP(CURRENT_DATETIME('Asia/Jakarta')) - start_time AS diff_1,
    DATE_DIFF(TIMESTAMP(CURRENT_DATETIME('Asia/Jakarta')),start_time,DAY) AS diff_Day
FROM `bigquery-public-data.austin_bikeshare.bikeshare_trips` 
LIMIT 1000


SELECT start_time,
    EXTRACT (QUARTER FROM start_time) as quarter_of_year,
    CURRENT_DATETIME() AS default_current,
    CURRENT_DATETIME('Asia/Jakarta') AS current_jakarta,
    TIMESTAMP(CURRENT_DATETIME('Asia/Jakarta')) - start_time AS diff_1,
    DATE_DIFF(TIMESTAMP(CURRENT_DATETIME('Asia/Jakarta')),start_time,DAY) AS diff_Day,
    DATE_ADD(start_time,INTERVAL 10 DAY) AS plus_10_days
FROM `bigquery-public-data.austin_bikeshare.bikeshare_trips` 
LIMIT 1000

SELECT founded_at,
		STR_TO_DATE(founded_at,'%m/%d/%y') AS date_type_founded_at,
		founded_at_clean,
        CONVERT(founded_at_clean,DATE)
FROM crunchbase_companies_clean_data 

# akan return error
ALTER TABLE crunchbase_companies_clean_data
MODIFY COLUMN founded_at DATE;

# 1. siapkan kolom baru
ALTER TABLE crunchbase_companies_clean_data
ADD COLUMN cleaned_founded_at DATE;
SELECT * FROM crunchbase_companies_clean_data;

# 2. copu paste combined str_to_datedemo
UPDATE crunchbase_companies_clean_data SET cleaned_founded_at = STR_TO_DATE(founded_at, '%m/%d/%y');
SELECT * FROM crunchbase_companies_clean_data;

# 3. drop kolom lama
ALTER TABLE crunchbase_companies_clean_data DROP COLUMN founded_at;
SELECT * FROM crunchbase_companies_clean_data;



SELECT cleaned_founded_at,
	COALESCE(cleaned_founded_at,'no date') as cleaned_founded_at_2
FROM crunchbase_companies_clean_data;


SELECT start_time,
	LEFT(start_time,10) AS scliced_date,
    RIGHT(start_time,8) AS sliced_time,
    SUBSTR(start_time,6,2) AS sliced_month
FROM dc_bikeshare_q1_2012 


SELECT start_time,
	LEFT(start_time,10) AS scliced_date,
    RIGHT(start_time,8) AS sliced_time,
    SUBSTR(start_time,6,2) AS sliced_month
FROM dc_bikeshare_q1_2012 

SELECT bike_number,
	TRIM(LEADING 'W0' from bike_number) AS trimmed,
    POSITION('1' In bike_number) AS pos
from dc_bikeshare_q1_2012;

SELECT end_terminal,
	end_station,
    UPPER(end_station) as upper_case,
    LOWER(end_station) as lower_case,
    CONCAT(end_terminal,' - ',end_station) as terminal_id_name
FROM dc_bikeshare_q1_2012;

SELECT start_terminal,
		start_time,
		duration_seconds,
        sum(duration_seconds) OVER(PARTITION by start_terminal ORDER by start_time) AS running_total,
        COUNT(duration_seconds) OVER(PARTITION by start_terminal ORDER by start_time) AS running_count,
        AVG(duration_seconds) OVER(PARTITION by start_terminal ORDER by start_time) AS running_average 
FROM dc_bikeshare_q1_2012;


SELECT start_terminal,
		start_time,
		duration_seconds,
        sum(duration_seconds) AS running_total,
        COUNT(duration_seconds) AS running_count,
        AVG(duration_seconds) as running_avg
FROM dc_bikeshare_q1_2012
GROUP by start_terminal;



SELECT start_terminal,
		start_time,
		duration_seconds,
        ROW_NUMBER() OVER(PARTITION by start_terminal ORDER by start_time) as number
FROM dc_bikeshare_q1_2012;


SELECT start_terminal,
		duration_seconds,
        NTILE(4) OVER(PARTITION BY start_terminal ORDER BY duration_seconds) AS quartile,
        NTILE(5)OVER(PARTITION BY start_terminal ORDER BY duration_seconds) AS quanile
from dc_bikeshare_q1_2012;

### LAG and LEAD
SELECT start_terminal,
       duration_seconds,
       LAG(duration_seconds, 1) OVER
         (PARTITION BY start_terminal ORDER BY duration_seconds) AS lag,
       LEAD(duration_seconds, 1) OVER
         (PARTITION BY start_terminal ORDER BY duration_seconds) AS lead,
       duration_seconds -LAG(duration_seconds, 1) OVER
         (PARTITION BY start_terminal ORDER BY duration_seconds)
         AS difference
FROM dc_bikeshare_q1_2012
ORDER BY start_terminal, duration_seconds